<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|Win32">
      <Configuration>DebugDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|Win32">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|x64">
      <Configuration>DebugDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|x64">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{FC88A9EA-A150-4375-9BA2-DCB14D4FE093}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>lzma</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetName>lib$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetName>lib$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetName>lib$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetName>lib$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <TargetName>$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <TargetName>$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <TargetName>$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <TargetName>$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\src\liblzma\api;$(ProjectDir)..\..\src\liblzma\common;$(ProjectDir)..\..\src\liblzma\check;$(ProjectDir)..\..\src\liblzma\lz;$(ProjectDir)..\..\src\liblzma\rangecoder;$(ProjectDir)..\..\src\liblzma\lzma;$(ProjectDir)..\..\src\liblzma\delta;$(ProjectDir)..\..\src\liblzma\simple;$(ProjectDir)..\..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>HAVE_CONFIG_H;inline=_inline;restrict=__restrict;_WINDOWS;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

IF EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  RD /s /q "$(OutDir)..\..\include\$(ProjectName)"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO Off
SETLOCAL EnableDelayedExpansion EnableExtensions

MKDIR "$(OutDir)..\..\include"
MKDIR "$(OutDir)..\..\include\$(ProjectName)"

COPY "$(ProjectDir)..\..\src\liblzma\api\lzma.h" "$(OutDir)..\..\include\"

FOR %%H IN (base.h bcj.h block.h check.h container.h delta.h filter.h hardware.h index.h index_hash.h lzma12.h stream_flags.h version.h vli.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\src\liblzma\api\lzma\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

MKDIR "$(OutDir)..\..\licenses"
COPY "$(ProjectDir)..\..\COPYING.LGPLv2.1" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PreprocessorDefinitions>HAVE_CONFIG_H;inline=_inline;restrict=__restrict;_WINDOWS;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\src\liblzma\api;$(ProjectDir)..\..\src\liblzma\common;$(ProjectDir)..\..\src\liblzma\check;$(ProjectDir)..\..\src\liblzma\lz;$(ProjectDir)..\..\src\liblzma\rangecoder;$(ProjectDir)..\..\src\liblzma\lzma;$(ProjectDir)..\..\src\liblzma\delta;$(ProjectDir)..\..\src\liblzma\simple;$(ProjectDir)..\..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

IF EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  RD /s /q "$(OutDir)..\..\include\$(ProjectName)"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO Off
SETLOCAL EnableDelayedExpansion EnableExtensions

MKDIR "$(OutDir)..\..\include"
MKDIR "$(OutDir)..\..\include\$(ProjectName)"

COPY "$(ProjectDir)..\..\src\liblzma\api\lzma.h" "$(OutDir)..\..\include\"

FOR %%H IN (base.h bcj.h block.h check.h container.h delta.h filter.h hardware.h index.h index_hash.h lzma12.h stream_flags.h version.h vli.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\src\liblzma\api\lzma\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

MKDIR "$(OutDir)..\..\licenses"
COPY "$(ProjectDir)..\..\COPYING.LGPLv2.1" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\src\liblzma\api;$(ProjectDir)..\..\src\liblzma\common;$(ProjectDir)..\..\src\liblzma\check;$(ProjectDir)..\..\src\liblzma\lz;$(ProjectDir)..\..\src\liblzma\rangecoder;$(ProjectDir)..\..\src\liblzma\lzma;$(ProjectDir)..\..\src\liblzma\delta;$(ProjectDir)..\..\src\liblzma\simple;$(ProjectDir)..\..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>HAVE_CONFIG_H;inline=_inline;restrict=__restrict;_WINDOWS;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

IF EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  RD /s /q "$(OutDir)..\..\include\$(ProjectName)"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO Off
SETLOCAL EnableDelayedExpansion EnableExtensions

MKDIR "$(OutDir)..\..\include"
MKDIR "$(OutDir)..\..\include\$(ProjectName)"

COPY "$(ProjectDir)..\..\src\liblzma\api\lzma.h" "$(OutDir)..\..\include\"

FOR %%H IN (base.h bcj.h block.h check.h container.h delta.h filter.h hardware.h index.h index_hash.h lzma12.h stream_flags.h version.h vli.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\src\liblzma\api\lzma\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

MKDIR "$(OutDir)..\..\licenses"
COPY "$(ProjectDir)..\..\COPYING.LGPLv2.1" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\src\liblzma\api;$(ProjectDir)..\..\src\liblzma\common;$(ProjectDir)..\..\src\liblzma\check;$(ProjectDir)..\..\src\liblzma\lz;$(ProjectDir)..\..\src\liblzma\rangecoder;$(ProjectDir)..\..\src\liblzma\lzma;$(ProjectDir)..\..\src\liblzma\delta;$(ProjectDir)..\..\src\liblzma\simple;$(ProjectDir)..\..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>HAVE_CONFIG_H;inline=_inline;restrict=__restrict;_WINDOWS;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

IF EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  RD /s /q "$(OutDir)..\..\include\$(ProjectName)"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO Off
SETLOCAL EnableDelayedExpansion EnableExtensions

MKDIR "$(OutDir)..\..\include"
MKDIR "$(OutDir)..\..\include\$(ProjectName)"

COPY "$(ProjectDir)..\..\src\liblzma\api\lzma.h" "$(OutDir)..\..\include\"

FOR %%H IN (base.h bcj.h block.h check.h container.h delta.h filter.h hardware.h index.h index_hash.h lzma12.h stream_flags.h version.h vli.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\src\liblzma\api\lzma\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

MKDIR "$(OutDir)..\..\licenses"
COPY "$(ProjectDir)..\..\COPYING.LGPLv2.1" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\src\liblzma\api;$(ProjectDir)..\..\src\liblzma\common;$(ProjectDir)..\..\src\liblzma\check;$(ProjectDir)..\..\src\liblzma\lz;$(ProjectDir)..\..\src\liblzma\rangecoder;$(ProjectDir)..\..\src\liblzma\lzma;$(ProjectDir)..\..\src\liblzma\delta;$(ProjectDir)..\..\src\liblzma\simple;$(ProjectDir)..\..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>DLL_EXPORT;HAVE_CONFIG_H;inline=_inline;restrict=__restrict;_DEBUG;_WINDOWS;_USRDLL;WIN32;DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

IF EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  RD /s /q "$(OutDir)..\..\include\$(ProjectName)"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO Off
SETLOCAL EnableDelayedExpansion EnableExtensions

MKDIR "$(OutDir)..\..\include"
MKDIR "$(OutDir)..\..\include\$(ProjectName)"

COPY "$(ProjectDir)..\..\src\liblzma\api\lzma.h" "$(OutDir)..\..\include\"

FOR %%H IN (base.h bcj.h block.h check.h container.h delta.h filter.h hardware.h index.h index_hash.h lzma12.h stream_flags.h version.h vli.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\src\liblzma\api\lzma\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

MKDIR "$(OutDir)..\..\licenses"
COPY "$(ProjectDir)..\..\COPYING.LGPLv2.1" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\..\src\common;..\..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\src\liblzma\api;$(ProjectDir)..\..\src\liblzma\common;$(ProjectDir)..\..\src\liblzma\check;$(ProjectDir)..\..\src\liblzma\lz;$(ProjectDir)..\..\src\liblzma\rangecoder;$(ProjectDir)..\..\src\liblzma\lzma;$(ProjectDir)..\..\src\liblzma\delta;$(ProjectDir)..\..\src\liblzma\simple;$(ProjectDir)..\..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>DLL_EXPORT;HAVE_CONFIG_H;inline=_inline;restrict=__restrict;_DEBUG;_WINDOWS;_USRDLL;WIN32;DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

IF EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  RD /s /q "$(OutDir)..\..\include\$(ProjectName)"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO Off
SETLOCAL EnableDelayedExpansion EnableExtensions

MKDIR "$(OutDir)..\..\include"
MKDIR "$(OutDir)..\..\include\$(ProjectName)"

COPY "$(ProjectDir)..\..\src\liblzma\api\lzma.h" "$(OutDir)..\..\include\"

FOR %%H IN (base.h bcj.h block.h check.h container.h delta.h filter.h hardware.h index.h index_hash.h lzma12.h stream_flags.h version.h vli.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\src\liblzma\api\lzma\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

MKDIR "$(OutDir)..\..\licenses"
COPY "$(ProjectDir)..\..\COPYING.LGPLv2.1" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\..\src\common;..\..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\src\liblzma\api;$(ProjectDir)..\..\src\liblzma\common;$(ProjectDir)..\..\src\liblzma\check;$(ProjectDir)..\..\src\liblzma\lz;$(ProjectDir)..\..\src\liblzma\rangecoder;$(ProjectDir)..\..\src\liblzma\lzma;$(ProjectDir)..\..\src\liblzma\delta;$(ProjectDir)..\..\src\liblzma\simple;$(ProjectDir)..\..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>DLL_EXPORT;HAVE_CONFIG_H;inline=_inline;restrict=__restrict;WIN32;NDEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

IF EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  RD /s /q "$(OutDir)..\..\include\$(ProjectName)"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO Off
SETLOCAL EnableDelayedExpansion EnableExtensions

MKDIR "$(OutDir)..\..\include"
MKDIR "$(OutDir)..\..\include\$(ProjectName)"

COPY "$(ProjectDir)..\..\src\liblzma\api\lzma.h" "$(OutDir)..\..\include\"

FOR %%H IN (base.h bcj.h block.h check.h container.h delta.h filter.h hardware.h index.h index_hash.h lzma12.h stream_flags.h version.h vli.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\src\liblzma\api\lzma\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

MKDIR "$(OutDir)..\..\licenses"
COPY "$(ProjectDir)..\..\COPYING.LGPLv2.1" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\..\src\common;..\..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\src\liblzma\api;$(ProjectDir)..\..\src\liblzma\common;$(ProjectDir)..\..\src\liblzma\check;$(ProjectDir)..\..\src\liblzma\lz;$(ProjectDir)..\..\src\liblzma\rangecoder;$(ProjectDir)..\..\src\liblzma\lzma;$(ProjectDir)..\..\src\liblzma\delta;$(ProjectDir)..\..\src\liblzma\simple;$(ProjectDir)..\..\src\common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>DLL_EXPORT;HAVE_CONFIG_H;inline=_inline;restrict=__restrict;NDEBUG;_WINDOWS;_USRDLL;WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

IF EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  RD /s /q "$(OutDir)..\..\include\$(ProjectName)"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO Off
SETLOCAL EnableDelayedExpansion EnableExtensions

MKDIR "$(OutDir)..\..\include"
MKDIR "$(OutDir)..\..\include\$(ProjectName)"

COPY "$(ProjectDir)..\..\src\liblzma\api\lzma.h" "$(OutDir)..\..\include\"

FOR %%H IN (base.h bcj.h block.h check.h container.h delta.h filter.h hardware.h index.h index_hash.h lzma12.h stream_flags.h version.h vli.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\src\liblzma\api\lzma\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

MKDIR "$(OutDir)..\..\licenses"
COPY "$(ProjectDir)..\..\COPYING.LGPLv2.1" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
    <ResourceCompile>
      <AdditionalIncludeDirectories>..\..\src\common;..\..\src\liblzma\api\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ResourceCompile Include="..\..\src\liblzma\liblzma_w32res.rc">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
    </ResourceCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\src\common\tuklib_cpucores.h" />
    <ClInclude Include="..\..\src\common\tuklib_physmem.h" />
    <ClInclude Include="..\..\src\liblzma\check\check.h" />
    <ClInclude Include="..\..\src\liblzma\check\crc32_table_be.h" />
    <ClInclude Include="..\..\src\liblzma\check\crc32_table_le.h" />
    <ClInclude Include="..\..\src\liblzma\check\crc64_table_be.h" />
    <ClInclude Include="..\..\src\liblzma\check\crc64_table_le.h" />
    <ClInclude Include="..\..\src\liblzma\check\crc_macros.h" />
    <ClInclude Include="..\..\src\liblzma\common\alone_decoder.h" />
    <ClInclude Include="..\..\src\liblzma\common\block_buffer_encoder.h" />
    <ClInclude Include="..\..\src\liblzma\common\block_decoder.h" />
    <ClInclude Include="..\..\src\liblzma\common\block_encoder.h" />
    <ClInclude Include="..\..\src\liblzma\common\common.h" />
    <ClInclude Include="..\..\src\liblzma\common\easy_preset.h" />
    <ClInclude Include="..\..\src\liblzma\common\filter_common.h" />
    <ClInclude Include="..\..\src\liblzma\common\filter_decoder.h" />
    <ClInclude Include="..\..\src\liblzma\common\filter_encoder.h" />
    <ClInclude Include="..\..\src\liblzma\common\index.h" />
    <ClInclude Include="..\..\src\liblzma\common\index_encoder.h" />
    <ClInclude Include="..\..\src\liblzma\common\memcmplen.h" />
    <ClInclude Include="..\..\src\liblzma\common\outqueue.h" />
    <ClInclude Include="..\..\src\liblzma\common\stream_decoder.h" />
    <ClInclude Include="..\..\src\liblzma\common\stream_flags_common.h" />
    <ClInclude Include="..\..\src\liblzma\delta\delta_common.h" />
    <ClInclude Include="..\..\src\liblzma\delta\delta_decoder.h" />
    <ClInclude Include="..\..\src\liblzma\delta\delta_encoder.h" />
    <ClInclude Include="..\..\src\liblzma\delta\delta_private.h" />
    <ClInclude Include="..\..\src\liblzma\lzma\fastpos.h" />
    <ClInclude Include="..\..\src\liblzma\lzma\lzma2_decoder.h" />
    <ClInclude Include="..\..\src\liblzma\lzma\lzma2_encoder.h" />
    <ClInclude Include="..\..\src\liblzma\lzma\lzma_common.h" />
    <ClInclude Include="..\..\src\liblzma\lzma\lzma_decoder.h" />
    <ClInclude Include="..\..\src\liblzma\lzma\lzma_encoder.h" />
    <ClInclude Include="..\..\src\liblzma\lzma\lzma_encoder_private.h" />
    <ClInclude Include="..\..\src\liblzma\lz\lz_decoder.h" />
    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder.h" />
    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder_hash.h" />
    <ClInclude Include="..\..\src\liblzma\lz\lz_encoder_hash_table.h" />
    <ClInclude Include="..\..\src\liblzma\rangecoder\price.h" />
    <ClInclude Include="..\..\src\liblzma\rangecoder\range_common.h" />
    <ClInclude Include="..\..\src\liblzma\rangecoder\range_decoder.h" />
    <ClInclude Include="..\..\src\liblzma\rangecoder\range_encoder.h" />
    <ClInclude Include="..\..\src\liblzma\simple\simple_coder.h" />
    <ClInclude Include="..\..\src\liblzma\simple\simple_decoder.h" />
    <ClInclude Include="..\..\src\liblzma\simple\simple_encoder.h" />
    <ClInclude Include="..\..\src\liblzma\simple\simple_private.h" />
    <ClInclude Include="config.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\src\common\tuklib_cpucores.c" />
    <ClCompile Include="..\..\src\common\tuklib_physmem.c" />
    <ClCompile Include="..\..\src\liblzma\check\check.c" />
    <ClCompile Include="..\..\src\liblzma\check\crc32_fast.c" />
    <ClCompile Include="..\..\src\liblzma\check\crc32_table.c" />
    <ClCompile Include="..\..\src\liblzma\check\crc64_fast.c" />
    <ClCompile Include="..\..\src\liblzma\check\crc64_table.c" />
    <ClCompile Include="..\..\src\liblzma\check\sha256.c" />
    <ClCompile Include="..\..\src\liblzma\common\alone_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\alone_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\auto_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\block_buffer_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\block_buffer_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\block_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\block_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\block_header_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\block_header_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\block_util.c" />
    <ClCompile Include="..\..\src\liblzma\common\common.c" />
    <ClCompile Include="..\..\src\liblzma\common\easy_buffer_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\easy_decoder_memusage.c" />
    <ClCompile Include="..\..\src\liblzma\common\easy_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\easy_encoder_memusage.c" />
    <ClCompile Include="..\..\src\liblzma\common\easy_preset.c" />
    <ClCompile Include="..\..\src\liblzma\common\filter_buffer_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\filter_buffer_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\filter_common.c" />
    <ClCompile Include="..\..\src\liblzma\common\filter_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\filter_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\filter_flags_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\filter_flags_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\hardware_cputhreads.c" />
    <ClCompile Include="..\..\src\liblzma\common\hardware_physmem.c" />
    <ClCompile Include="..\..\src\liblzma\common\index.c" />
    <ClCompile Include="..\..\src\liblzma\common\index_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\index_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\index_hash.c" />
    <ClCompile Include="..\..\src\liblzma\common\outqueue.c" />
    <ClCompile Include="..\..\src\liblzma\common\stream_buffer_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\stream_buffer_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\stream_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\stream_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\stream_encoder_mt.c" />
    <ClCompile Include="..\..\src\liblzma\common\stream_flags_common.c" />
    <ClCompile Include="..\..\src\liblzma\common\stream_flags_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\stream_flags_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\vli_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\vli_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\common\vli_size.c" />
    <ClCompile Include="..\..\src\liblzma\delta\delta_common.c" />
    <ClCompile Include="..\..\src\liblzma\delta\delta_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\delta\delta_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\lzma\fastpos_table.c" />
    <ClCompile Include="..\..\src\liblzma\lzma\lzma2_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\lzma\lzma2_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\lzma\lzma_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_optimum_fast.c" />
    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_optimum_normal.c" />
    <ClCompile Include="..\..\src\liblzma\lzma\lzma_encoder_presets.c" />
    <ClCompile Include="..\..\src\liblzma\lz\lz_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\lz\lz_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\lz\lz_encoder_mf.c" />
    <ClCompile Include="..\..\src\liblzma\rangecoder\price_table.c" />
    <ClCompile Include="..\..\src\liblzma\simple\arm.c" />
    <ClCompile Include="..\..\src\liblzma\simple\armthumb.c" />
    <ClCompile Include="..\..\src\liblzma\simple\ia64.c" />
    <ClCompile Include="..\..\src\liblzma\simple\powerpc.c" />
    <ClCompile Include="..\..\src\liblzma\simple\simple_coder.c" />
    <ClCompile Include="..\..\src\liblzma\simple\simple_decoder.c" />
    <ClCompile Include="..\..\src\liblzma\simple\simple_encoder.c" />
    <ClCompile Include="..\..\src\liblzma\simple\sparc.c" />
    <ClCompile Include="..\..\src\liblzma\simple\x86.c" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>